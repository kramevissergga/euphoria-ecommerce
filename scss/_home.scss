.splide {
  &__track {
  }

  &__list {
  }

  &__slide {
  }

  &__pagination.splide__pagination--hero {
    position: absolute;
    left: 0;
    bottom: 0;
    @include adaptiveValue("bottom", 49, 10);
    @extend %f-center;
    flex-wrap: wrap;
    &-page.splide__pagination-page--hero {
      opacity: 0.5;
      height: toRem(10);
      @include adaptiveValue("width", 63, 30);
      background-color: #fff;
      transition: opacity 0.3s;
      .splide__pagination-page--hero li:first-child & {
        border-radius: toRem(12) toRem(0) toRem(0) toRem(12);
      }
      .splide__pagination-page--hero li:last-child & {
        border-radius: toRem(0) toRem(12) toRem(12) toRem(0);
      }

      &.is-active {
        opacity: 1;
      }
    }
  }
  &__arrows--hero {
    @media (max-width: toEm(768)) {
      display: none;
    }
    display: flex;
    gap: toRem(1);
  }

  &__arrow--hero {
    transition: opacity 0.3s;
    @media (any-hover: hover) {
      &:hover {
        opacity: 0.4;
      }
    }
    font-size: toRem(44);
    position: absolute;
    top: 50%;
    color: #fff;
    &::before {
      max-width: 100%;
    }
  }

  &__arrow--prev.splide__arrow--hero {
    @include adaptiveValue("left", 40, 10, 2, $containerWidth, 768);
  }

  &__arrow--next.splide__arrow--hero {
    @include adaptiveValue("right", 40, 10, 2, $containerWidth, 768);
  }
}
.slide-hero {
  position: relative;
  width: 100%;
  &__container {
  }

  &__body {
    @include adaptiveValue("margin-left", 85, 40, 2, $containerWidth, 768);
    @include adaptiveValue("margin-right", 85, 40, 2, $containerWidth, 768);
    @include adaptiveValue("padding-top", 129, 30);
    @include adaptiveValue("padding-bottom", 132, 40);
    position: relative;
    z-index: 2;
    display: grid;
    @media (min-width: toEm(400)) {
      justify-items: start;
    }
    @include adaptiveValue("row-gap", 40, 15);
  }

  &__label {
    color: #fff;
    @extend %CSC;
    font-size: 32px;
    @include adaptiveValue("font-size", 32, 18);
    font-weight: 500;
    line-height: 1.18;
    letter-spacing: 0.157px;
  }

  &__title {
    color: #fff;
    @extend %CSC;
    @include adaptiveValue("font-size", 78, 40);
    font-weight: 800;
    line-height: 1.2;
    letter-spacing: 0.315px;
  }

  &__link {
    min-width: toRem(250);
    text-align: center;
  }
  &__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.deals {
  &__container {
  }

  &__items {
    display: grid;
    @media (min-width: toEm(768)) {
      grid-template-columns: repeat(2, 1fr);
    }

    @include adaptiveValue("gap", 30, 15);
  }

  &__item {
  }
}
.item-deals {
  position: relative;
  border-radius: toRem(12);

  padding: toRem(30);
  overflow: hidden;
  box-shadow: toRem(2) toRem(2) toRem(10) 0 rgba(0, 0, 0, 0.4);
  &__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  &__body {
    position: relative;
    z-index: 2;
    aspect-ratio: 604/355;
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: center;
    > * {
      margin-bottom: toRem(20);
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
  &__label {
    @extend %CSC;
    color: #fff;
    font-size: toRem(18);
    font-weight: 800;
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 32, 20);
    }
  }

  &__title {
    @extend %CSC;
    color: #fff;
    @include adaptiveValue("font-size", 34, 24);
    font-weight: 800;
    line-height: 1.2;
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 15, 10);
    }
  }

  &__discount {
    @extend %CSC;
    color: #fff;
    font-size: toRem(16);
    font-weight: 500;
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 41, 25);
    }
  }

  &__link {
    @extend %CSC;
    color: #fff;
    font-size: toRem(20);
    font-style: normal;
    font-weight: 800;
    padding-bottom: toRem(4);
    border-bottom: 1px #fff solid;
    transition: border-bottom-color 0.3s;
    @media (any-hover: hover) {
      &:hover {
        border-bottom-color: transparent;
      }
    }
  }
}

.new {
  &__container {
  }
  &__slider {
    @media (min-width: toEm(500)) {
      padding: 0 toRem(37);
    }
    @media (max-width: toEm(500)) {
      margin-right: toRem(-15);
    }
    position: relative;
  }
  &__title {
  }
}
.splide {
  &__arrow--new {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    font-size: toRem(12);
    transition: color 0.3s;
    @media (any-hover: hover) {
      &:hover {
        color: $purpleColor;
      }
    }
    @media (max-width: toEm(500)) {
      display: none;
    }
  }

  &__arrow--prev.splide__arrow--new {
    left: 0;
  }

  &__arrow--next.splide__arrow--new {
    right: 0;
  }
}
.slide-new {
  &__item {
  }

  &__link {
    display: grid;
    @include adaptiveValue("gap", 30, 15);
    @media (any-hover: hover) {
      &:hover {
        .slide-new__title {
          text-decoration-color: inherit;
        }
        .slide-new__image {
          transform: scale(0.97);
        }
      }
    }
  }

  &__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: toRem(12);
    aspect-ratio: 1/1;
    transition: transform 0.3s;
  }

  &__title {
    color: $darkGrayColor;
    text-decoration: underline;
    text-decoration-color: transparent;
    transition: text-decoration-color 0.3s;
    @include adaptiveValue("font-size", 20, 16);
    font-weight: 700;
  }
}

.saving {
  &__title {
  }

  &__items {
    display: flex;
    flex-wrap: wrap;
    row-gap: toRem(20);
    margin: 0 toRem(-10);
  }

  &__column {
    padding: 0 toRem(10);
    flex: 1 0 33.333%;
  }

  &__item {
    min-width: toRem(280);
    min-height: toRem(393);
  }
}

.item-saving {
  position: relative;
  border-radius: toRem(12);
  overflow: hidden;
  display: flex;
  flex-direction: column;

  justify-content: center;
  &__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top;
  }

  &__body {
    padding: toRem(20);
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    text-align: left;

    > * {
      margin-bottom: toRem(10);
      &:last-child {
        margin-bottom: 0;
      }
    }
    &--right {
      align-self: end;
    }
    &--dark {
      .item-saving__title,
      .item-saving__desc,
      .item-saving__sale,
      .item-saving__link,
      .item-saving__arrow {
        color: $darkGrayColor;
      }
      .item-saving__link {
        border-color: $darkGrayColor;
        @media (any-hover: hover) {
          &:hover {
            background-color: #fff;
            border-color: #fff;
          }
        }
      }
    }
  }
  &__label {
    padding: toRem(16) toRem(8);
    min-width: toRem(104);
    text-align: center;
    background-color: $darkGrayColor;
    color: #fff;
    font-size: toRem(12);
    font-weight: 700;
    border-radius: toRem(4);
  }
  &__title {
    color: #fff;
    @extend %CSC;
    font-size: toRem(32);
    font-weight: 600;
    line-height: 1.37;
  }

  &__desc {
    color: #fff;
    font-size: toRem(14);
    font-weight: 600;
  }

  &__sale {
    color: #fff;
    font-size: toRem(18);
    font-weight: 700;
    margin-bottom: toRem(31);
  }

  &__arrow {
    display: flex;
    flex-direction: column;
    gap: toRem(40);
    //@include adaptiveValue("gap", 40, 20);
    align-items: center;
    color: #fff;
    &::before {
      font-size: toRem(20.8);
    }
  }

  &__link {
    padding: toRem(16) toRem(8);
    text-align: center;
    min-width: toRem(111);
    border-radius: toRem(4);
    border: toRem(1) solid #fff;
    color: #fff;
    font-size: toRem(12);
    font-weight: 500;
    transition: all 0.3s;
    @media (any-hover: hover) {
      &:hover {
        background-color: $blackColor;
        border-color: $blackColor;
      }
    }
  }
}

.products {
  &__items {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(toRem(260), 1fr));
    @include adaptiveValue("column-gap", 50, 20);
    @include adaptiveValue("row-gap", 50, 30);
    @media (max-width: toEm(650)) {
      grid-template-columns: repeat(auto-fill, minmax(toRem(190), 1fr));
    }
  }
}
